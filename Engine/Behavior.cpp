#pragma once

#include "Behavior.hpp"

//----------------------------------------------------------------------------//
// Behavior
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
Behavior::Behavior(void)
{
	m_eventMask |= Component::Updates;
}
//----------------------------------------------------------------------------//
Behavior::~Behavior(void)
{
}
//----------------------------------------------------------------------------//
void Behavior::_Register(bool _newState)
{
	if (_newState)
		_Start();
	else
		_Stop();
}
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
// BehaviorSystem 
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
BehaviorSystem::BehaviorSystem(void)
{
	LOG_NODE("Create BehaviorSystem");
}
//----------------------------------------------------------------------------//
BehaviorSystem::~BehaviorSystem(void)
{
	LOG_NODE("Destroy BehaviorSystem");
}
//----------------------------------------------------------------------------//
EventResult BehaviorSystem::_OnEvent(int _type, void* _data)
{
	switch (_type)
	{
	case SystemEvent::Update:
	{
		// ...

	} break;
	}

	return ER_Pass;
}
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
//
//----------------------------------------------------------------------------//
