//----------------------------------------------------------------------------//
// Структура папок
//----------------------------------------------------------------------------//

Bin	- Выходные исполняемые файлы
	Debug - Отладочная сборка
		Obj - Временные файлы
	Release - Сборка выпуска
		Obj - Временные файлы
	Compressed - Сжатые исполняемые файлы
Data - Файлы автоматической упаковки данных
Docs - Файлы докумнетации.
Engine - Файлы движка. Используются игрой и редактором.  
Game - файлы игры
Editor - Файлы редактора
Packer - Утилита для сжатия и упаковки файлов
Resources - Исходные файлы ресурсов
ThirdParty - Библиотеки, утилиты и иходники от третьей стороны	


//----------------------------------------------------------------------------//
// Структура проекта
//----------------------------------------------------------------------------//

Data
	Автоматизация упаковки данных
	Для добавления нового файла нужно добавить его в проект, выставить тип элемента - текст и дописать в MakeData.inl
	При изменении любого файла данных автоматически пересобирает выходные *.inl файлы
Engine
	Движок для игры и редактора
	Для сборки нужно подключить файл Engine.cpp в нужный проект
Game
	Игра
	В отладочной сборке, в отличии от релизной можно использовать CRT
	В сборке выпуска(Release) дополнительно создает сжатые файлы. 
	Параметры сжатия описаны в Compress.bat	
Packer
	Утилита для сжатия и упаковки файлов. 
	Упаковывает множество файлов в архив, сжимает его с помощью LZ4 и создает заголовочный файл для вставки в код.
	Размер файла ограничен 65535 байтами
	Для именования файлов ипользуется 16 битный BSD checksum 
	Опционально(compile-time) можно сохранять имена или использовать 32 битный SDBM hash вместо имен.
Editor
	Редактор
	Позволяет удобно настраивать генерацию контента

//----------------------------------------------------------------------------//
// Упаковынные данные
//----------------------------------------------------------------------------//

Данные упаковываются проектом Data c помощью Packer в файл GameData.inl для игры и EditorData.inl для редактора.
Используется алгоритм LZ4. Дает сжатие в среднем 1.4-2.0 раза. На текстовых данных коэффициент сжатия доходит до 5 раз.
Для jpeg с качеством 10% сжатие около 1.15, для 15% 1.1 

Размер файла ограничен 65535 байтами

Формат запкованного файла:
	- 2 байта - размер незапакованного архива
	- запакованный архив

Архив содержит последовательно файлы:
{
	word name; // BSD checksum, 2 bytes
	word size; // size of data, 2 bytes
	byte data[size]; // data, 'size' bytes
}

//----------------------------------------------------------------------------//
// Настройки движка
//----------------------------------------------------------------------------//

Все ключевые настройки находятся в Core.hpp в секции Settings

_FATAL - включает обработку критических ошибок
_LOG - включает ведение протокола
_DEBUG_RC - включает отладочные меры для объектов с подсчетом ссылок
_DEBUG_GRAPHICS - включает отладочные меры для графической подсистемы
_STATISTICS - включает профилирование и ведение статистики


_GL_CORE_PROFILE_CONTEXT - отключает устаревшие возможности OpenGL
_GL_ARB_CONTEXT - включает создание контекста OpenGL через wglCreateContextAttribsARB

 


